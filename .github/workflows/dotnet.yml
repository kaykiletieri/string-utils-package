name: Publish to GitHub Packages and NuGet

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Get Project Version
      id: base_version
      run: |
        base_version=$(grep '<Version>' Kayki.StringUtils/Kayki.StringUtils.csproj | sed 's/.*<Version>\(.*\)<\/Version>/\1/')
        echo "::set-output name=base_version::$base_version"

    - name: Determine version
      id: version
      run: |
        run_number=${GITHUB_RUN_NUMBER}
        echo "::set-output name=version::$run_number"

    - name: Pack
      run: |
        base_version=${{ steps.base_version.outputs.base_version }}
        run_number=${{ steps.version.outputs.version }}
        new_version="${base_version}.${run_number}"
        echo "Packing version $new_version"
        dotnet pack Kayki.StringUtils/Kayki.StringUtils.csproj --configuration Release /p:Version=$new_version --output out

    - name: Publish to GitHub Packages
      run: dotnet nuget push Kayki.StringUtils/out/*.nupkg --api-key ${{ secrets.PKG_TOKEN }} --source https://nuget.pkg.github.com/kaykiletieri/index.json --skip-duplicate

    - name: Publish to NuGet.org
      run: dotnet nuget push Kayki.StringUtils/out/*.nupkg --api-key ${{ secrets.PKG_NUGET_TOKEN }} --source https://api.nuget.org/v3/index.json --skip-duplicate
